@page "{name}"
@model Shop.UI.Pages.ProductModel
@{
}

@*
    before => href="/Product?name=NameText"
    asp-route-name="@p.Name" => asp-route-name => name => @page "{name}"
    after  => href="/Product/NameText"
*@

<div class="hero">
    <div class="hero-body">
        <div class="container">
            <div class="columns">
                <div class="column is-6">
                    <figure class="image">
                        <img src="~/images/testProductImage.jpg" />
                    </figure>
                </div>
                <div class="column is-6">
                    <section class="content">
                        <p class="title">@Model.Product.Name</p>
                        <p class="subtitle">@Model.Product.Description</p>
                        <p class="subtitle">@Model.Product.Value</p>
                        <p>
                            Pull out the content that is most important to them and find engaging, visual ways to get all the relevant information to them without any headache. Your buyer personas should inform the overall form and approach toward your product descriptions, including the website design and white space on the page.
                        </p>
                        <footer>
                            <form method="post">
                                <div class="field is-horizontal">
                                    <div class="field-label is-normal">
                                        <label class="label">Size</label>
                                    </div>
                                    <div class="field-body">
                                        <div class="field is-narrow">
                                            <div class="control">
                                                <div class="select is-fullwidth">
                                                    <select asp-for="CartViewModel.StockId" onchange="toggleStock(event)">
                                                        @foreach (var s in Model.Product.Stock) {
                                                            bool disabled = s.Qty <= 0;

                                                            @*option value="@s.Id" => event.target.value => @s.Id*@
                                                            <option value="@s.Id" disabled="@disabled">@s.Description</option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="field is-horizontal">
                                    <div class="field-label is-normal">
                                        <label class="label">Qty</label>
                                    </div>
                                    <div class="field-body">
                                        <div class="field is-narrow">
                                            <div class="control">
                                                <input class="input" asp-for="CartViewModel.Qty" value="1" />
                                            </div>
                                            @foreach (var stock in Model.Product.Stock) {
                                                if (stock.Qty <= 10) {
                                                    @*id="low-stock-@stock.Id" => 'low-stock-' + @stock.Id => 'low-stock-' + event.target.value*@
                                                    <p class="help is-danger is-hidden low-stock" id="low-stock-@stock.Id">
                                                        @(stock.Qty == 0 ? "Out Stock" : $"{stock.Qty} Left")
                                                    </p>
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="field is-horizontal">
                                    <div class="field-label is-normal">
                                    </div>
                                    <div class="field-body">
                                        <div class="field is-narrow">
                                            <div class="control">
                                                <button class="button is-success" type="submit">Submit</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </footer>
                    </section>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var toggleStock = function (e) {
        console.log(e);

        var stockToHide = document.querySelectorAll('.low-stock');

        //stockToHide.forEach(element => element.classList.add('is-hidden')); - not required
        stockToHide.forEach(function (element) {
            element.classList.add('is-hidden')
        });

        showLowStock(e.target.value);
    }

    var showLowStock = function (id) {
        var stockToShow = document.getElementById('low-stock-' + id);

        if (stockToShow !== null && stockToShow !== undefined)
            stockToShow.classList.remove('is-hidden');
    }

    showLowStock(document.getElementById('CartViewModel_StockId').value);
</script>